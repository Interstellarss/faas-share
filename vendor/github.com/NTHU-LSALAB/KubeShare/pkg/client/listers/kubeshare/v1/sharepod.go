/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/NTHU-LSALAB/KubeShare/pkg/apis/kubeshare/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SharePodLister helps list SharePods.
type SharePodLister interface {
	// List lists all SharePods in the indexer.
	List(selector labels.Selector) (ret []*v1.SharePod, err error)
	// SharePods returns an object that can list and get SharePods.
	SharePods(namespace string) SharePodNamespaceLister
	SharePodListerExpansion
}

// sharePodLister implements the SharePodLister interface.
type sharePodLister struct {
	indexer cache.Indexer
}

// NewSharePodLister returns a new SharePodLister.
func NewSharePodLister(indexer cache.Indexer) SharePodLister {
	return &sharePodLister{indexer: indexer}
}

// List lists all SharePods in the indexer.
func (s *sharePodLister) List(selector labels.Selector) (ret []*v1.SharePod, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SharePod))
	})
	return ret, err
}

// SharePods returns an object that can list and get SharePods.
func (s *sharePodLister) SharePods(namespace string) SharePodNamespaceLister {
	return sharePodNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SharePodNamespaceLister helps list and get SharePods.
type SharePodNamespaceLister interface {
	// List lists all SharePods in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.SharePod, err error)
	// Get retrieves the SharePod from the indexer for a given namespace and name.
	Get(name string) (*v1.SharePod, error)
	SharePodNamespaceListerExpansion
}

// sharePodNamespaceLister implements the SharePodNamespaceLister
// interface.
type sharePodNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SharePods in the indexer for a given namespace.
func (s sharePodNamespaceLister) List(selector labels.Selector) (ret []*v1.SharePod, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SharePod))
	})
	return ret, err
}

// Get retrieves the SharePod from the indexer for a given namespace and name.
func (s sharePodNamespaceLister) Get(name string) (*v1.SharePod, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("sharepod"), name)
	}
	return obj.(*v1.SharePod), nil
}
