---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: faas-share
    component: prometheus-config
  name: prometheus-config
  namespace: "faas-share"
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 15s
      external_labels:
          monitor: 'faas-monitor'
    
    
    rule_files:
        - 'alert.rules.yml'
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093
    scrape_configs:
      - job_name: 'prometheus'
        scrape_interval: 10s
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'dcgm-node'
        scrape_interval: 5s
        static_configs:
          - targets: ['138.246.235.35:9400']
      - job_name: 'dcgm-node2'
        scrape_interval: 5s
        static_configs:
          - targets: ['138.246.233.238:9400']
      - job_name: 'kubernetes-pods'
        scrape_interval: 5s
        honor_labels: false
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - faas-share
                - faas-share-fn
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
  alert.rules.yml: |
    groups:
      - name: openfaas
        rules:
        - alert: service_down
          expr: up == 0
          for: 5s
          labels:
            service: gateway
            severity: major
        - alert: InstanceDown
          #expr: sum by (function_name) (rate(gateway_function_invocation_total[20s]) - rate(gateway_function_invocation_total[20s] offset 5s)) < -1
          expr: sum(rate(gateway_function_invocation_total{code="200"}[10s])) BY (function_name) <= 10
          for: 5s
          labels:
            service: gateway
            severity: major
          annotations:
            summary: Instance "{{$labels.function_name}}" down
            description: Having "{{$labels.function_name}}" has been down for more than 5s
        - alert: RPSDown
          expr: sum by (function_name) (rate(gateway_function_invocation_total[20s]) - rate(gateway_function_invocation_total[20s] offset 5s)) < -1 and sum(rate(gateway_function_invocation_total{code="200"}[10s])) BY (function_name) > 10
          #expr: sum(rate(gateway_function_invocation_total{code="200"}[10s])) BY (function_name) <= 10
          for: 5s
          labels:
            service: gateway
            severity: major
          annotations:
            summary: Instance "{{$labels.function_name}}" down
            description: Having "{{$labels.function_name}}" has been down for more than 5s
        - alert: APIHighInvocationRate
          expr: sum(rate(gateway_function_invocation_total{code="200"}[10s])) BY (function_name) > 10
          for: 5s
          labels:
            service: gateway
            severity: major
          annotations:
            description: High invocation total on "{{$labels.function_name}}"
            summary: High invocation total on "{{$labels.function_name}}"
